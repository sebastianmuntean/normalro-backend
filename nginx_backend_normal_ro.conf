# Nginx configuration for backend.normal.ro
# FastAPI backend with CORS support

upstream fastapi_backend {
    server 127.0.0.1:8000;
    keepalive 64;
}

server {
    listen 80;
    server_name backend.normal.ro;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name backend.normal.ro;

    # SSL Configuration (ajustează căile către certificatele tale)
    ssl_certificate /etc/letsencrypt/live/backend.normal.ro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/backend.normal.ro/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/backend.normal.ro.access.log;
    error_log /var/log/nginx/backend.normal.ro.error.log;

    # Max body size pentru upload-uri
    client_max_body_size 10M;

    # Root location
    location / {
        return 200 '{"status":"ok","service":"NormalRO Backend API"}';
        add_header Content-Type application/json;
    }

    # FastAPI backend - toate endpoint-urile /api/*
    location /api/ {
        # Proxy către FastAPI
        proxy_pass http://fastapi_backend;
        
        # Proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # IMPORTANT: Nu adăuga headerele CORS aici!
        # FastAPI se ocupă de CORS
        # Dacă adaugi aici, vei avea duplicate headers și erori
    }

    # Health check endpoint
    location /health {
        proxy_pass http://fastapi_backend/api/health;
        access_log off;
    }
}

